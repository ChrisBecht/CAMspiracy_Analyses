?Igraph::gorder
?igraph::gorder
?igraph::gsize
?igraph::reciprocity
?igraph::assortativity
?igraph::assortativity.degree
knitr::opts_chunk$set(warning = FALSE, message = FALSE, error = FALSE, comment = FALSE)
# Set working directory to the folder where the R project is saved.
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Clear all current active objects.
rm(list=ls(all=TRUE))
graphics.off()
# Load necessary R packages.
#install.packages("Amelia")
#install.packages("car")
#install.packages("corrplot")
#install.packages("ggplot2")
#install.packages("kableExtra")
#install.packages("lavaan")
#install.packages("nFactors")
#install.packages("psych")
#install.packages("Rcpp")
#install.packages("semPlot")
#install.packages("tidySEM")
#install.packages("tidyverse")
library(Amelia)
library(car)
library(corrplot)
library(ggplot2)
library(kableExtra)
library(lavaan)
library(lavaanPlot)
library(nFactors)
library(psych)
library(Rcpp)
library(semPlot)
library(tidySEM)
library(tidyverse)
data <- read.csv("results-survey938447.csv",
header=TRUE, sep=","
)
# get rid of useless shit
{
data$Instr1 <- NULL
data$Instr2 <- NULL
data$lastpage <- NULL
data$startlanguage <- NULL
data$seed <- NULL
data$submitdate <- NULL
data$Abschl <- NULL
data[data == ""] <- NA
}
View(data)
missmap(data,
legend = TRUE,
rank.order = FALSE
)
data <-
data[rowSums(is.na(data[, as.numeric(which(names(data) == "Exist_EX001")):as.numeric(which(names(data) == "CMQ_CM005"))])) == 0,]
data$Exist_EX001 <- car::recode(data$Exist_EX001, "1=8; 2=7; 3=6; 4=5; 5=4; 6=3; 7=2; 8=1")
data$Exist_EX005 <- car::recode(data$Exist_EX005, "1=8; 2=7; 3=6; 4=5; 5=4; 6=3; 7=2; 8=1")
View(data)
data$Exist <- rowMeans(subset(data, select=c(Exist_EX001:Exist_EX005)))
data$Soz <- rowMeans(subset(data, select=c(Soz_SO001:Soz_SO005)))
data$Epist <- rowMeans(subset(data, select=c(Epist_EP001:Epist_EP005)))
data$CMQ <- rowMeans(subset(data, select=c(CMQ_CM001:CMQ_CM005)))
data$Motiv <- rowSums(subset(data, select=c(Exist, Soz, Epist)))
?bibliometrix()
??bibliometrix()
biblioshiny()
biblioshiny()
library(bibliometrix)
biblioshiny()
library(bibliometrix)
biblioshiny()
library(bibliometrix)
biblioshiny()
round(3.5)
round(2.5)
library(bibliometrix)
biblioshiny()
biblioshiny()
load(tidyverse)
library(tidyverse)
install.packages("rjava")
library(rJava)
install.packages("rJava")
library(rJava)
shiny::runApp('C:/Users/Christophe B/Desktop/Studium Master/x HiWi AllgPsych/Julius/CAM_Workshop/DataAnalysis-main')
library(xlsx)
shiny::runApp('C:/Users/Christophe B/Desktop/Studium Master/x HiWi AllgPsych/Julius/CAM_Workshop/DataAnalysis-main')
5+7*4+6*3+5*3+3*3+4*6
5+(7*4)+(6*3)+(5*3)+(3*3)+(4*6)
99/20
x <- 20000
return(x)
x <- 20000
for(1 in 24){
for(1:24){
for(x in 1:24){
x <- x * 1.035
x <- x - x/24
return(x)
}
for(i in 1:24){
x <- x * 1.035
x <- x - x/24
return(x)
}
x <- 20000
x <- x * 1.035
x <- 20000
x <- x * 1.0325
x <- x - x/24
x <- 20000
x <- x * 1.0325
x <- 20000
x <- 20000
x <- 20000
y <- x * 1.0325
z <- y-x
x <- y - y/24
y <- x * 1.0325
z <- (y-x)+z
x <- y - y/24
x <- 20000
y <- x * 1.0325
z <- (y-x)+z
z <- (y-x)
z = 0
z <- (y-x)+z
x <- y - (y/24)
y <- x * 1.0325
z <- (y-x)+z
for(1 in 1:24) {
for(1 in 1:24) {
for(i in 1:24) {
y <- x * 1.0325
z <- (y - x) + z
x <- y - (y / 24)
}
for(1 in 1:24) {
x <- 20000
z <- 0
x <- 20000
z <- 0
for(1:24) {
for(x in 1:24) {
y <- x * 1.0325
z <- (y - x) + z
x <- y - (y / 24)
}
x <- 20000
z <- 0
for(1 in 1:24) {
?for
?for (variable in vector) {
for(i in 1:24) {
i-1
y <- x * 1.0325
z <- (y - x) + z
x <- y - (y / 24)
}
install.packages("MultilayerExtraction")
data_t12 <- read.xlsx(t12_questionnaireCAMs)
library(openxlsx)
data_t12 <- read.xlsx(t12_questionnaireCAMs)
data_t12 <- read.xlsx(t12_questionnaireCAMs.xlsx)
data_t12 <- read.xlsx("t12_questionnaireCAMs.xlsx")
ID_list <- read.xlsx("IDs_t2_coloured")
ID_list <- read.xlsx("IDs_t2_coloured.xlsx")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
rm(list=ls(all=TRUE))
graphics.off()
data_t12 <- read.xlsx("t12_questionnaireCAMs.xlsx")
ID_list <- read.xlsx("IDs_t2_coloured.xlsx")
View(ID_list)
View(data_t12)
View(data_t12)
library(deplyr)
library(dplyr)
View(data_t12)
# Zuerst eine Funktion definieren, um zu prüfen, ob die Spalten 104-132 leer sind
are_cols_empty <- function(row) {
all(is.na(row[104:132]))
}
# Dann die Zeilen in data_t12 filtern, die den Kriterien entsprechen, und sie in t2_empty kopieren
t2_empty <- data_t12 %>%
filter(PROLIFIC_PID %in% ID_list$ID) %>%
filter(apply(.[, 104:132], 1, are_cols_empty))
View(t2_empty)
# Zuerst eine Funktion definieren, um zu prüfen, ob die Spalten 104-132 leer sind
are_cols_empty <- function(row) {
all(is.na(row))
}
# Dann die Zeilen in data_t12 filtern, die den Kriterien entsprechen, und sie in t2_empty kopieren
t2_empty <- data_t12 %>%
filter(PROLIFIC_PID %in% ID_list$ID) %>%
filter(apply(.[, 104:132], 1, are_cols_empty))
View(t2_empty)
View(data_t12)
View(t2_empty)
setwd("/data")
setwd("./data")
data_t12 <- read.xlsx("t12_questionnaireCAMs.xlsx")
ID_list <- read.xlsx("IDs_t2_coloured.xlsx")
setwd("..")
setwd("./output")
write.xlsx(t2_empty, file = "t2_empty.xlsx")
setwd("..")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
rm(list=ls(all=TRUE))
library(openxlsx)
library(dplyr)
# load data
setwd("./data")
data_t12 <- read.xlsx("t12_questionnaireCAMs.xlsx")
ID_list <- read.xlsx("IDs_t2_coloured.xlsx")
setwd("..")
# Write function to check if columns of t2 are empty
# are_cols_empty <- function(row) {
#   all(is.na(row))
# }
setwd("functions")
for(i in 1:length(dir())){
source(dir()[i], encoding = "utf-8")
}
rm(i)
setwd("..")
t2_empty <- data_t12 %>%
filter(PROLIFIC_PID %in% ID_list$ID) %>%
filter(apply(.[, 104:132], 1, are_cols_empty))
ID_list <- read.xlsx("IDs_t2_coloured.xlsx")
setwd("./data")
data_t12 <- read.xlsx("t12_questionnaireCAMs.xlsx")
ID_list <- read.xlsx("IDs_t2_coloured.xlsx")
setwd("..")
t2_empty <- data_t12 %>%
filter(PROLIFIC_PID %in% ID_list$ID) %>%
filter(apply(.[, 104:132], 1, are_cols_empty))
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
rm(list=ls(all=TRUE))
library(openxlsx)
library(dplyr)
# load data
setwd("./data")
data_t12 <- read.xlsx("t12_questionnaireCAMs.xlsx")
ID_list <- read.xlsx("IDs_t2_coloured.xlsx")
setwd("..")
# load functions
setwd("functions")
for(i in 1:length(dir())){
source(dir()[i], encoding = "utf-8")
}
rm(i)
setwd("..")
# Filter rows of data_t12 according to criteria:
## 1. Was participant invited to t2?: data_t12$Prolific_PID in ID_list$ID
## 2. Did participant not participate in t2?: rows 104 to 132 (t2) empty
t2_empty <- data_t12 %>%
filter(PROLIFIC_PID %in% ID_list$ID) %>%
filter(apply(.[, 104:132], 1, are_cols_empty))
# safe output
setwd("./output")
write.xlsx(t2_empty, file = "t2_empty.xlsx")
setwd("..")
View(ID_list)
t2_empty <- data_t12 %>%
filter(PROLIFIC_PID %in% ID_list$ID) # %>%
View(t2_empty)
t2_empty <- data_t12 %>%
filter(PROLIFIC_PID %in% ID_list$ID) %>%
filter(apply(.[, 104:182], 1, are_cols_empty))
View(t2_empty)
t2_empty <- data_t12 %>%
filter(PROLIFIC_PID %in% ID_list$ID) %>%
filter(apply(.[, 104:182], 1, are_cols_empty))
View(are_cols_empty)
t2_empty <- data_t12 %>%
filter(PROLIFIC_PID %in% ID_list$ID) %>%
filter(apply(.[, 104:182], 1, are_cols_empty))
View(t2_empty)
data_t12 <- read.xlsx("t12_questionnaireCAMs.xlsx")
setwd("..")
data_t12 <- read.xlsx("t12_questionnaireCAMs.xlsx")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
data_t12 <- read.xlsx("t12_questionnaireCAMs.xlsx")
setwd("./data")
data_t12 <- read.xlsx("t12_questionnaireCAMs.xlsx")
ID_list <- read.xlsx("IDs_t2_coloured.xlsx")
setwd("..")
setwd("functions")
for(i in 1:length(dir())){
source(dir()[i], encoding = "utf-8")
}
rm(i)
View(are_cols_empty)
setwd("..")
t2_empty <- data_t12 %>%
filter(PROLIFIC_PID %in% ID_list$ID) %>%
filter(apply(.[, 104:182], 1, are_cols_empty))
setwd("./output")
View(t2_empty)
View(t2_empty)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
rm(list=ls(all=TRUE))
# load packages
library(openxlsx)
library(dplyr)
# load data
setwd("./data")
data_t12 <- read.xlsx("t12_questionnaireCAMs.xlsx")
ID_list <- read.xlsx("IDs_t2_coloured.xlsx")
setwd("..")
# load functions
setwd("functions")
for(i in 1:length(dir())){
source(dir()[i], encoding = "utf-8")
}
rm(i)
setwd("..")
# Filter rows of data_t12 according to criteria:
## 1. Was participant invited to t2?: data_t12$Prolific_PID in ID_list$ID
## 2. Did participant not participate in t2?: rows 104 to 132 (t2) empty
t2_empty <- data_t12 %>%
filter(PROLIFIC_PID %in% ID_list$ID) %>%
filter(apply(.[, 104:182], 1, are_cols_empty))
# safe output
setwd("./output")
write.xlsx(t2_empty, file = "t2_empty.xlsx")
setwd("..")
View(data_t12)
View(t2_empty)
setwd("./data")
data_t12 <- load("t12_questionnaireCAMs.Rds")
data_t12 <- read.xlsx("t12_questionnaireCAMs.xlsx")
ID_list <- read.xlsx("IDs_t2_coloured.xlsx")
setwd("..")
setwd("functions")
for(i in 1:length(dir())){
source(dir()[i], encoding = "utf-8")
}
rm(i)
setwd("..")
t2_empty <- data_t12 %>%
filter(PROLIFIC_PID %in% ID_list$ID) %>%
filter(apply(.[, 104:182], 1, are_cols_empty))
CAM_list <- read.xlsx("questionnaireCAMs.xlsx")
setwd("./data")
CAM_list <- read.xlsx("questionnaireCAMs.xlsx")
setwd("..")
dir()
#
t2_data <- data_t12 %>%
filter(!PROLIFIC_PID %in% t2_empty$PROLIFIC_PID)
t2_data <- data_t12 %>%
filter(PROLIFIC_PID %in% ID_list$ID)
t2_data <- data_t12 %>%
filter(PROLIFIC_PID %in% ID_list$ID)%>%
filter(apply(.[, 104:182], 1, !are_cols_empty))
#
t2_data <- data_t12 %>%
filter(!PROLIFIC_PID %in% t2_empty$PROLIFIC_PID)
t2_data <- data_t12 %>%
filter(PROLIFIC_PID %in% ID_list$ID)%>%
filter(apply(.[, 104:182], 1, are_cols_empty))
t2_data <- data_t12 %>%
filter(PROLIFIC_PID %in% ID_list$ID)%>%
filter(!PROLIFIC_PID %in% t2_empty$PROLIFIC_PID)
View(t2_data)
rm(t2_data)
t2_data.y <- data_t12 %>%
filter(PROLIFIC_PID %in% ID_list$ID) %>%
filter(!PROLIFIC_PID %in% t2_empty$PROLIFIC_PID)
t2_data.x <- data_t12 %>%
filter(PROLIFIC_PID %in% CAM_list$PROLIFIC_PID)
t2_missing <- anti_join(t2_data.x, t2_data.y, by = "PROLIFIC_PID")
View(t2_missing)
t2_missing <- rbind(t2_missing, anti_join(t2_data.y, t2_data.x, by = "ID"))
View(t2_missing)
View(data_t12)
setwd("./data")
ata_t12 <- read.xlsx("t12_questionnaireCAMs.xlsx") # Data set: https://github.com/ChrisBecht/CAMspiracy_Analyses/blob/main/t12_segCAMs/outputs/t12_questionnaireCAMs.xlsx
t2_invited <- read.xlsx("IDs_t2_coloured.xlsx") # Participants invited to t2: https://github.com/ChrisBecht/CAMspiracy_Analyses/blob/main/t1_segmentation/outputs/IDs_t2_coloured.xlsx and https://github.com/ChrisBecht/CAMspiracy_Analyses/blob/main/t1_segmentation/outputs/IDs_t2_additional_coloured.xlsx
t2_CAMs <- read.xlsx("questionnaireCAMs.xlsx") # Participants who submitted a CAM: https://github.com/ChrisBecht/CAMspiracy_Analyses/blob/main/t2_CAMs/dataPreperation_step1/outputs/questionnaireCAMs.xlsx
setwd("..")
data_t12 <- read.xlsx("t12_questionnaireCAMs.xlsx") # Data set: https://github.com/ChrisBecht/CAMspiracy_Analyses/blob/main/t12_segCAMs/outputs/t12_questionnaireCAMs.xlsx
setwd("./data")
data_t12 <- read.xlsx("t12_questionnaireCAMs.xlsx") # Data set: https://github.com/ChrisBecht/CAMspiracy_Analyses/blob/main/t12_segCAMs/outputs/t12_questionnaireCAMs.xlsx
rm(ata_t12)
setwd("..")
setwd("functions")
for(i in 1:length(dir())){
source(dir()[i], encoding = "utf-8")
}
rm(i)
setwd("..")
t2_dataEmpty <- data_t12 %>%
filter(PROLIFIC_PID %in% t2_invited$ID) %>%
filter(apply(.[, 104:182], 1, are_cols_empty))
setwd("./output")
write.xlsx(t2_dataEmpty, file = "t2_dataEmpty.xlsx")
setwd("..")
t2_data <- data_t12 %>%
filter(PROLIFIC_PID %in% t2_invited$ID) %>%
filter(!PROLIFIC_PID %in% t2_dataEmpty$PROLIFIC_PID)
t2_dataCAMs <- data_t12 %>%
filter(PROLIFIC_PID %in% t2_CAMs$PROLIFIC_PID)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
rm(list=ls(all=TRUE))
# load packages
library(openxlsx)
library(dplyr)
# load data
setwd("./data")
data_t12 <- read.xlsx("t12_questionnaireCAMs.xlsx") # Data set: https://github.com/ChrisBecht/CAMspiracy_Analyses/blob/main/t12_segCAMs/outputs/t12_questionnaireCAMs.xlsx
t2_invited <- read.xlsx("IDs_t2_coloured.xlsx") # Participants invited to t2: https://github.com/ChrisBecht/CAMspiracy_Analyses/blob/main/t1_segmentation/outputs/IDs_t2_coloured.xlsx and https://github.com/ChrisBecht/CAMspiracy_Analyses/blob/main/t1_segmentation/outputs/IDs_t2_additional_coloured.xlsx
t2_CAMs <- read.xlsx("questionnaireCAMs.xlsx") # Participants who submitted a CAM: https://github.com/ChrisBecht/CAMspiracy_Analyses/blob/main/t2_CAMs/dataPreperation_step1/outputs/questionnaireCAMs.xlsx
setwd("..")
# load functions
setwd("functions")
for(i in 1:length(dir())){
source(dir()[i], encoding = "utf-8")
}
rm(i)
setwd("..")
#######################################################################################
# Filter rows of data_t12 according to criteria:
## 1. Was participant invited to t2?: data_t12$Prolific_PID in t2_invited$ID
## 2. Did participant not participate in t2?: rows 104 to 132 (t2) empty
t2_dataEmpty <- data_t12 %>%
filter(PROLIFIC_PID %in% t2_invited$ID) %>%
filter(apply(.[, 104:182], 1, are_cols_empty))
setwd("./output")
write.xlsx(t2_dataEmpty, file = "t2_dataEmpty.xlsx")
setwd("..")
# -> 98 VPn wurden zwar eingeladen, aber haben nicht teilgenommen.
#######################################################################################
# Filter rows of data_t12 according to criteria:
## 1. Was participant invited to t2?: data_t12$Prolific_PID in t2_invited$ID
## 2. Did participant  participate in t2?: not filtered in previous step
t2_data <- data_t12 %>%
filter(PROLIFIC_PID %in% t2_invited$ID) %>%
filter(!PROLIFIC_PID %in% t2_dataEmpty$PROLIFIC_PID)
setwd("./output")
write.xlsx(t2_data, file = "t2_data.xlsx")
setwd("..")
# -> Für t2 haben wir Daten von insg. 122 VPn.
#######################################################################################
# Compare t2_data with t2_CAMs
t2_dataCAMs <- data_t12 %>%
filter(PROLIFIC_PID %in% t2_CAMs$PROLIFIC_PID)
# -> Für t2 haben wir CAMs von insg. 130 VPn.
t2_missing <- anti_join(t2_dataCAMs, t2_data, by = "PROLIFIC_PID")
# -> 8 VPn wurden eingeladen, haben CAMs gezeichnet, aber keine Daten für t2.
View(t2_missing)
setwd("./output")
write.xlsx(t2_missing, file = "t2_missing.xlsx")
setwd("..")
View(t2_missing)
View(data_t12)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
rm(list=ls(all=TRUE))
# load packages
library(openxlsx)
library(dplyr)
# load data
setwd("./data")
data_t12 <- read.xlsx("t12_questionnaireCAMs.xlsx") # Data set: https://github.com/ChrisBecht/CAMspiracy_Analyses/blob/main/t12_segCAMs/outputs/t12_questionnaireCAMs.xlsx
t2_invited <- read.xlsx("IDs_t2_coloured.xlsx") # Participants invited to t2: https://github.com/ChrisBecht/CAMspiracy_Analyses/blob/main/t1_segmentation/outputs/IDs_t2_coloured.xlsx and https://github.com/ChrisBecht/CAMspiracy_Analyses/blob/main/t1_segmentation/outputs/IDs_t2_additional_coloured.xlsx
t2_CAMs <- read.xlsx("questionnaireCAMs.xlsx") # Participants who submitted a CAM: https://github.com/ChrisBecht/CAMspiracy_Analyses/blob/main/t2_CAMs/dataPreperation_step1/outputs/questionnaireCAMs.xlsx
setwd("..")
# load functions
setwd("functions")
for(i in 1:length(dir())){
source(dir()[i], encoding = "utf-8")
}
rm(i)
setwd("..")
#######################################################################################
# Filter rows of data_t12 according to criteria:
## 1. Was participant invited to t2?: data_t12$Prolific_PID in t2_invited$ID
## 2. Did participant not participate in t2?: rows 104 to 132 (t2) empty
t2_dataEmpty <- data_t12 %>%
filter(PROLIFIC_PID %in% t2_invited$ID) %>%
filter(apply(.[, 104:182], 1, are_cols_empty))
setwd("./output")
write.xlsx(t2_dataEmpty, file = "t2_dataEmpty.xlsx")
setwd("..")
# -> 98 VPn wurden zwar eingeladen, aber haben nicht teilgenommen.
#######################################################################################
# Filter rows of data_t12 according to criteria:
## 1. Was participant invited to t2?: data_t12$Prolific_PID in t2_invited$ID
## 2. Did participant  participate in t2?: not filtered in previous step
t2_data <- data_t12 %>%
filter(PROLIFIC_PID %in% t2_invited$ID) %>%
filter(!PROLIFIC_PID %in% t2_dataEmpty$PROLIFIC_PID)
setwd("./output")
write.xlsx(t2_data, file = "t2_data.xlsx")
setwd("..")
# -> Für t2 haben wir Daten von insg. 122 VPn.
#######################################################################################
# Compare t2_data with t2_CAMs
t2_dataCAMs <- data_t12 %>%
filter(PROLIFIC_PID %in% t2_CAMs$PROLIFIC_PID)
# -> Für t2 haben wir CAMs von insg. 130 VPn.
t2_missing <- anti_join(t2_dataCAMs, t2_data, by = "PROLIFIC_PID")
setwd("./output")
write.xlsx(t2_missing, file = "t2_missing.xlsx")
setwd("..")
# -> 8 VPn wurden eingeladen, haben CAMs gezeichnet, aber keine Daten für t2.
View(t2_dataEmpty)
